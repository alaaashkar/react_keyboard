{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","document","addEventListener","event","setState","key","removeEventListener","className","this","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEJ,WAAaG,EAAME,WAPzC,kCAWE,WAAwB,IAAD,OACrBJ,SAASK,oBAAoB,SAAS,SAACH,GACrC,EAAKC,SAAS,CAAEJ,WAAaG,EAAME,WAbzC,oBAiBE,WACE,OACE,qBAAKE,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGC,KAAKT,MAAMC,WAAX,mCAC6BQ,KAAKT,MAAMC,WADxC,KAGC,kCAxBZ,GAAyBS,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,W","file":"static/js/main.80e62c8a.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: (event.key) });\n    });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: (event.key) });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.pressedKey ? (\n            `The last pressed key is [${this.state.pressedKey}]`\n          ) : (\n            'Nothing was pressed yet'\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}